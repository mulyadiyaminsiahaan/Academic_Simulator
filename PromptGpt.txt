package academic.driver;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public class AcademicDatabase extends AbstractDatabase {

    public AcademicDatabase(String url) throws SQLException {
        super(url);
    }

    @Override
    protected void createTables() throws SQLException {
        String Course = "CREATE TABLE IF NOT EXISTS course (" + 
            "code VARCHAR(255) NOT NULL PRIMARY KEY," +
            "name TEXT NOT NULL," +
            "credits INT NOT NULL," +
            "grade VARCHAR(255) NOT NULL" + 
            ")";

        PreparedStatement statement = this.getConnection().prepareStatement(Course);

        statement.execute(Course);

    }

    @Override
    protected void prepareTables() throws SQLException {
        this.createTables();
        //this.seedTables();
    }

    public void insertCourse(String code, String name, String credits, String grade) {
        try {
            // Membersihkan tabel sebelum menyisipkan data
            String cleanupSQL = "DELETE FROM course";
            PreparedStatement cleanupStatement = getConnection().prepareStatement(cleanupSQL);
            cleanupStatement.executeUpdate();
            // Mendapatkan koneksi ke database
            getConnection();

            // Menyiapkan pernyataan SQL untuk menyisipkan data kursus
            String sql = "INSERT INTO Course (code, name, credits, grade) VALUES (?, ?, ?, ?)";
            PreparedStatement statement = connection.prepareStatement(sql);
            statement.setString(1, code);
            statement.setString(2, name);
            statement.setString(3, credits);
            statement.setString(4, grade);

            // Menjalankan pernyataan SQL
            statement.executeUpdate();

            // Menutup pernyataan dan koneksi
            statement.close();
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void printCourse() {
        try {
            // Mendapatkan koneksi ke database
            getConnection();

            // Menyiapkan pernyataan SQL untuk mengambil data kursus
            String sql = "SELECT * FROM Course";
            PreparedStatement statement = connection.prepareStatement(sql);

            // Menjalankan pernyataan SQL
            ResultSet resultSet = statement.executeQuery();

            // Menampilkan hasil
            while (resultSet.next()) {
                String code = resultSet.getString("code");
                String name = resultSet.getString("name");
                String credits = resultSet.getString("credits");
                String grade = resultSet.getString("grade");

                System.out.println(code + "|" + name + "|" + credits + "|" + grade);
            }

            // Menutup pernyataan, result set, dan koneksi
            resultSet.close();
            statement.close();
            connection.close();
        } catch (SQLException e) {
            e.printStackTrace();
        }
    }
}
